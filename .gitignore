# Local .terraform directories
**/.terraform/*
**/.terraform/env/Dev*
**/.terraform/env/Prod*
# .tfstate files

**/.terraform/env/Dev/.tfstate*
**/.terraform/env/Prod/*.tfstate*
**/.terraform/env/Dev/*.tfstate.**
**/.terraform/env/Prod/*.tfstate*
*.tfstate
*.tfstate.*

# Crash log files
**/.terraform/env/Dev/crash.log
**/.terraform/env/Prod/crash.log
**/.terraform/env/Dev/crash.*.log
**/.terraform/env/Prod/crash.*.log
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
**/.terraform/env/Dev/*.tfvars
**/.terraform/env/Prod/*.tfvars
**/.terraform/env/Dev/*.tfvars.json
**/.terraform/env/Prod/*.tfvars.json
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
**/.terraform/env/Dev/.terraformrc
**/.terraform/env/Prod/.terraformrc
**/.terraform/env/Dev/terraform.rc
**/.terraform/env/Prod/terraform.rc
.terraformrc
terraform.rc